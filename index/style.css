@font-face {
  font-family: "Heebo";
  src: url("./fonts/Heebo-Light.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Heebo";
  src: url("./fonts/Heebo-Light.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Yantramanav";
  src: url("./fonts/Yantramanav-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями
  */
img {
  display: block;
  max-width: 100%;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  height: 100%;
  /**
     Плавный скролл
    */
  scroll-behavior: smooth;
}

body {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  min-height: 100%;
  /**
     Унифицированный интерлиньяж
    */
  line-height: 1.5;
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--o-transition-duration);
}

a {
  color: var(--color-white);
}

a:hover {
  color: var(--color-light-gray);
}

:root {
  --color-dark: #000000;
  --color-white: #ffffff;
  --color-dark-gray: #404040;
  --color-light-gray: #c4c4c4;

  --border: 1px solid var(--color-white);
  --border-radius: 30px;

  --font-family-base: "Heebo", sans-serif;
  --font-family-accent: "Yantramanav", sans-serif;

  --input-height: 54px;

  --container-width: 1300px;
  --container-padding-x: 15px; /**чтобы при +- экрана контент не слипался с краями**/

  --o-transition-duration: 0.2s; /**для плавности интерактив.элем-ов */

  body {
    font-family: var(--font-family-base);
    font-size: 16px;
    line-height: 1.75;
    color: var(--color-light-gray);
    background-color: var(--color-dark);
  }

  .container {
    max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
    margin-inline: auto; /*центрирование по горизонтали*/
    padding-inline: var(--container-padding-x); /*внутр отступ по горизонтали*/
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: var(--font-family-base);
    font-weight: 700;
    text-transform: uppercase;
  }
}

.button {
  display: inline-flex;
  height: 38px;
  align-items: center;
  padding-inline: 26px;
  margin-inline-end: 10px;
  text-transform: uppercase;
  white-space: nowrap; /*текст на кнопке не будет переноситься*/
  font-size: 12px;
  font-weight: 700px;
  line-height: 2;
  letter-spacing: 1.2px; /*расстояние между буквами*/
  background-color: var(--color-white);
  border: none;
  border-radius: var(--border-radius);
}

.button:hover {
  background-color: var(--color-light-gray);
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: 20px;
  padding-inline: 32px;
}

.header-logo {
  flex-shrink: 0;
}

.header-menu-list {
  display: flex;
  flex-wrap: wrap;
  column-gap: 30px;
}

.header-menu-link {
  display: inline-flex; /*Чтобы применилась высота элемента списка 90px*/
  height: 90px;
  align-items: center;
  text-decoration: none;
  text-transform: uppercase;
  font-size: 12px;
  font-weight: 700px;
  letter-spacing: 1.2px; /*расстояние между буквами*/
}

.header-menu-link.is-current::after {
  content: "";
  width: 5px;
  aspect-ratio: 1;
  background-color: currentColor;
  border-radius: 50%;
}

.header-action {
  display: flex;
  column-gap: 40px;
}

.header-burger-button {
  display: inline-flex;
  flex-direction: column;
  justify-content: center;
  vertical-align: middle;
  row-gap: 4px;
  width: 40px;
  aspect-ratio: 1;
  padding-left: 8px;
  color: var(--color-white);
  background-color: transparent;
  border: var(--border);
  border-radius: 50%;
}

.header-burger-button-line { 
  width: 8px;
  height: 2px;
  background-color: currentColor;
  box-shadow: 16px 0 0 currentColor;
}

.header-burger-button:hover {
  color: var(--color-light-gray);
  border-color: currentColor;
}

@media (max-width: 1024px) {
  .header{
    flex-wrap: wrap;
    row-gap: 10px;
    padding-top: 20px;
    padding-inline: 15px;
  }
  .header-menu {
    order: 1;
    flex-basis: 100%;
  }
  .header-menu-link {
    height: 50px;
  }

  @media (max-width: 767px) {
    .header {
      padding-top: 10px;
    }

    .button {
      padding-inline: 18px;
    }
    .header-menu-link {
      height: 32px;
    }
    .header-menu-list {
      column-gap: 24px;
    }

    .header-action {
      column-gap: 15px;
    }
  }
}